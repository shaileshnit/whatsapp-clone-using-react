{"version":3,"sources":["firebase.js","Components/StateProvider.js","Components/Chat.js","Components/SidebarChat.js","Components/Sidebar.js","Components/reducer.js","Components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chat","useState","seed","setSeed","input","setInput","roomId","useParams","roomName","setRoomName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","Math","floor","random","className","Avatar","src","Date","length","timestamp","toDate","toUTCString","IconButton","message","displayName","onChange","e","target","placeholder","type","onClick","preventDefault","add","FieldValue","serverTimestamp","SidebarChat","id","addNewChat","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0478126a.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyAuIT_JVdTnBUIlgIHp8dz_yBIqX9aylyw',\r\n  authDomain: 'whats-app-clone-e012a.firebaseapp.com',\r\n  projectId: 'whats-app-clone-e012a',\r\n  storageBucket: 'whats-app-clone-e012a.appspot.com',\r\n  messagingSenderId: '378524336728',\r\n  appId: '1:378524336728:web:5d271a5a20b9efba20002d',\r\n  measurementId: 'G-DWPDEBGSDM',\r\n}\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebaseApp.firestore()\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\n\r\nexport { auth, provider }\r\nexport default db\r\n","import React, { createContext, useContext, useReducer } from 'react'\r\n\r\n// Preparing data layer by creating context where the actually data live\r\nexport const StateContext = createContext()\r\n\r\n// higher order component which takes three things\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n)\r\n\r\n// provides the state\r\nexport const useStateValue = () => useContext(StateContext)\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Chat.css'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined'\r\nimport AttachFile from '@material-ui/icons/AttachFile'\r\nimport MoreVert from '@material-ui/icons/MoreVert'\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon'\r\nimport MicIcon from '@material-ui/icons/Mic'\r\nimport { useParams } from 'react-router-dom'\r\nimport db from '../firebase'\r\nimport { useStateValue } from './StateProvider'\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat() {\r\n  const [seed, setSeed] = useState('')\r\n  const [input, setInput] = useState('')\r\n  const { roomId } = useParams()\r\n  const [roomName, setRoomName] = useState('')\r\n  const [messages, setMessages] = useState([])\r\n  const [{ user }, dispatch] = useStateValue()\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault()\r\n    db.collection('rooms').doc(roomId).collection('messages').add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    })\r\n    setInput('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      // retrieve name\r\n      db.collection('rooms')\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name))\r\n\r\n      // retrieve messages\r\n      db.collection('rooms')\r\n        .doc(roomId)\r\n        .collection('messages')\r\n        .orderBy('timestamp', 'asc')\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        )\r\n    }\r\n  }, [roomId])\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000))\r\n  }, [])\r\n\r\n  return (\r\n    <div className='chat'>\r\n      {/* chat header */}\r\n      <div className='chat__header'>\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className='chat__headerInfo'>\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            Last Seen at{' '}\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n            ).toUTCString()}\r\n          </p>\r\n        </div>\r\n\r\n        <div className='chat__headerRight'>\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      {/* chat body */}\r\n      <div className='chat__body'>\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat__message ${\r\n              message.name === user.displayName && 'chat__receiver'\r\n            }`}\r\n          >\r\n            <span className='chat__name'>{message.name}</span>\r\n            {message.message}\r\n            <span className='chat__timestamp'>\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      {/* chat footer */}\r\n      <div className='chat__footer'>\r\n        <InsertEmoticonIcon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => {\r\n              setInput(e.target.value)\r\n            }}\r\n            placeholder='Type a message'\r\n            type='text'\r\n          />\r\n          <button onClick={sendMessage} type='submit'>\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","import React, { useEffect, useState } from 'react'\r\nimport './SidebarChat.css'\r\nimport { Avatar } from '@material-ui/core'\r\nimport db from '../firebase'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n  const [seed, setSeed] = useState('')\r\n  const [messages, setMessages] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      db.collection('rooms')\r\n        .doc(id)\r\n        .collection('messages')\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        )\r\n    }\r\n  }, [id])\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000))\r\n  }, [])\r\n\r\n  const createChat = () => {\r\n    const roomName = prompt('Please enter name for chat')\r\n    if (roomName) {\r\n      // save roomname in database and add chats\r\n      db.collection('rooms').add({\r\n        name: roomName,\r\n      })\r\n    }\r\n  }\r\n\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`}>\r\n      <div className='sidebarChat'>\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className='sidebarChat__info'>\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div className='sidebarChat' onClick={createChat}>\r\n      <h2>Add new Chat</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SidebarChat\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\n\r\n// to make icons clickable we have to use IconButton\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined'\r\n\r\nimport SidebarChat from './SidebarChat'\r\nimport db from '../firebase'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Sidebar() {\r\n  const [rooms, setRooms] = useState([])\r\n  const [{ user }, dispatch] = useStateValue()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => {\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    })\r\n    return () => {\r\n      unsubscribe()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='sidebar'>\r\n      {/* Sidebar__header */}\r\n      <div className='sidebar__header'>\r\n        <IconButton>\r\n          <Avatar src={user?.photoURL} />\r\n        </IconButton>\r\n        <div className='sidebar__headerRight'>\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sidebar__search */}\r\n      <div className='sidebar__search'>\r\n        <div className='sidebar__searchContainer'>\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <input placeholder='Search or start new chat' type='text' />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sidebar__list */}\r\n      <div className='sidebar__chats'>\r\n        <SidebarChat addNewChat />\r\n\r\n        {/* map every room with sidebar chat */}\r\n        {rooms.map((room) => (\r\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","export const initialState = {\r\n  user: null,\r\n}\r\n\r\nexport const actionTypes = {\r\n  SET_USER: 'SET_USER',\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return { ...state, user: action.user }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reducer\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './Login.css'\r\nimport { auth, provider } from '../firebase'\r\nimport { actionTypes } from './reducer'\r\nimport { useStateValue } from './StateProvider'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateValue()\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) =>\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        })\r\n      )\r\n      .catch((error) => alert(error.message))\r\n  }\r\n  return (\r\n    <div className='login'>\r\n      <div className='login__container'>\r\n        <img\r\n          src='https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg'\r\n          alt=''\r\n        />\r\n\r\n        <div className='login__text'>\r\n          <h1>Sign in to Whatsapp</h1>\r\n        </div>\r\n\r\n        <Button type='submit' onClick={signIn}>\r\n          Sign in with google\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Chat from './Components/Chat'\nimport Sidebar from './Components/Sidebar'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\nimport Login from './Components/Login'\nimport { useStateValue } from './Components/StateProvider'\n\nfunction App() {\n  // pull the user from data layer\n  const [{ user }, dispatch] = useStateValue()\n\n  return (\n    <div className='app'>\n      {!user ? (\n        <>\n          <Router>\n            <Redirect to='/login' />\n            <Switch>\n              <Route path='/login'>\n                <Login />\n              </Route>\n            </Switch>\n          </Router>\n        </>\n      ) : (\n        <div className='app__body'>\n          <Router>\n            <Redirect to='/' />\n            <Sidebar />\n            <Switch>\n              <Route path='/rooms/:roomId' exact>\n                <Chat />\n              </Route>\n              <Route path='/' exact>\n                {/* <Chat /> */}\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport reducer, { initialState } from './Components/reducer'\nimport { StateProvider } from './Components/StateProvider'\n// push the data into data layer and pull it from anywhere from any component\n//  goal is to push the user into the data lyer when sign in and pull whenever we need it\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}