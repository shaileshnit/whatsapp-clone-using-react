[{"D:\\Test\\whatsapp-clone\\src\\index.js":"1","D:\\Test\\whatsapp-clone\\src\\reportWebVitals.js":"2","D:\\Test\\whatsapp-clone\\src\\App.js":"3","D:\\Test\\whatsapp-clone\\src\\Components\\Sidebar.js":"4","D:\\Test\\whatsapp-clone\\src\\Components\\SidebarChat.js":"5","D:\\Test\\whatsapp-clone\\src\\Components\\Chat.js":"6","D:\\Test\\whatsapp-clone\\src\\firebase.js":"7","D:\\Test\\whatsapp-clone\\src\\Components\\Login.js":"8","D:\\Test\\whatsapp-clone\\src\\Components\\reducer.js":"9","D:\\Test\\whatsapp-clone\\src\\Components\\StateProvider.js":"10"},{"size":869,"mtime":1611736720761,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1161,"mtime":1611772005644,"results":"14","hashOfConfig":"12"},{"size":2117,"mtime":1611747445348,"results":"15","hashOfConfig":"12"},{"size":1422,"mtime":1611771736196,"results":"16","hashOfConfig":"12"},{"size":3520,"mtime":1611764544071,"results":"17","hashOfConfig":"12"},{"size":699,"mtime":1611595840526,"results":"18","hashOfConfig":"12"},{"size":1058,"mtime":1611767631192,"results":"19","hashOfConfig":"12"},{"size":323,"mtime":1611764643452,"results":"20","hashOfConfig":"12"},{"size":520,"mtime":1611738627908,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"147kxxl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"D:\\Test\\whatsapp-clone\\src\\index.js",[],["47","48"],"D:\\Test\\whatsapp-clone\\src\\reportWebVitals.js",[],"D:\\Test\\whatsapp-clone\\src\\App.js",["49","50","51"],"import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport Chat from './Components/Chat'\nimport Sidebar from './Components/Sidebar'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom'\nimport Login from './Components/Login'\nimport { useStateValue } from './Components/StateProvider'\n\nfunction App() {\n  // pull the user from data layer\n  const [{ user }, dispatch] = useStateValue()\n\n  return (\n    <div className='app'>\n      {!user ? (\n        <>\n          <Router>\n            <Redirect to='/login' />\n            <Switch>\n              <Route path='/login'>\n                <Login />\n              </Route>\n            </Switch>\n          </Router>\n        </>\n      ) : (\n        <div className='app__body'>\n          <Router>\n            <Redirect to='/' />\n            <Sidebar />\n            <Switch>\n              <Route path='/rooms/:roomId' exact>\n                <Chat />\n              </Route>\n              <Route path='/' exact>\n                {/* <Chat /> */}\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","D:\\Test\\whatsapp-clone\\src\\Components\\Sidebar.js",["52"],"import React, { useEffect, useState } from 'react'\r\nimport './Sidebar.css'\r\n\r\n// to make icons clickable we have to use IconButton\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge'\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined'\r\n\r\nimport SidebarChat from './SidebarChat'\r\nimport db from '../firebase'\r\nimport { useStateValue } from './StateProvider'\r\n\r\nfunction Sidebar() {\r\n  const [rooms, setRooms] = useState([])\r\n  const [{ user }, dispatch] = useStateValue()\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => {\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      )\r\n    })\r\n    return () => {\r\n      unsubscribe()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className='sidebar'>\r\n      {/* Sidebar__header */}\r\n      <div className='sidebar__header'>\r\n        <IconButton>\r\n          <Avatar src={user?.photoURL} />\r\n        </IconButton>\r\n        <div className='sidebar__headerRight'>\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sidebar__search */}\r\n      <div className='sidebar__search'>\r\n        <div className='sidebar__searchContainer'>\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <input placeholder='Search or start new chat' type='text' />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Sidebar__list */}\r\n      <div className='sidebar__chats'>\r\n        <SidebarChat addNewChat />\r\n\r\n        {/* map every room with sidebar chat */}\r\n        {rooms.map((room) => (\r\n          <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","D:\\Test\\whatsapp-clone\\src\\Components\\SidebarChat.js",[],"D:\\Test\\whatsapp-clone\\src\\Components\\Chat.js",["53"],"import React, { useState, useEffect } from 'react'\r\nimport './Chat.css'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport SearchOutlined from '@material-ui/icons/SearchOutlined'\r\nimport AttachFile from '@material-ui/icons/AttachFile'\r\nimport MoreVert from '@material-ui/icons/MoreVert'\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon'\r\nimport MicIcon from '@material-ui/icons/Mic'\r\nimport { useParams } from 'react-router-dom'\r\nimport db from '../firebase'\r\nimport { useStateValue } from './StateProvider'\r\nimport firebase from 'firebase'\r\n\r\nfunction Chat() {\r\n  const [seed, setSeed] = useState('')\r\n  const [input, setInput] = useState('')\r\n  const { roomId } = useParams()\r\n  const [roomName, setRoomName] = useState('')\r\n  const [messages, setMessages] = useState([])\r\n  const [{ user }, dispatch] = useStateValue()\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault()\r\n    db.collection('rooms').doc(roomId).collection('messages').add({\r\n      message: input,\r\n      name: user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    })\r\n    setInput('')\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      // retrieve name\r\n      db.collection('rooms')\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name))\r\n\r\n      // retrieve messages\r\n      db.collection('rooms')\r\n        .doc(roomId)\r\n        .collection('messages')\r\n        .orderBy('timestamp', 'asc')\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        )\r\n    }\r\n  }, [roomId])\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000))\r\n  }, [])\r\n\r\n  return (\r\n    <div className='chat'>\r\n      {/* chat header */}\r\n      <div className='chat__header'>\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className='chat__headerInfo'>\r\n          <h3>{roomName}</h3>\r\n          <p>\r\n            Last Seen at{' '}\r\n            {new Date(\r\n              messages[messages.length - 1]?.timestamp?.toDate()\r\n            ).toUTCString()}\r\n          </p>\r\n        </div>\r\n\r\n        <div className='chat__headerRight'>\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      {/* chat body */}\r\n      <div className='chat__body'>\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`chat__message ${\r\n              message.name === user.displayName && 'chat__receiver'\r\n            }`}\r\n          >\r\n            <span className='chat__name'>{message.name}</span>\r\n            {message.message}\r\n            <span className='chat__timestamp'>\r\n              {new Date(message.timestamp?.toDate()).toUTCString()}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n      {/* chat footer */}\r\n      <div className='chat__footer'>\r\n        <InsertEmoticonIcon />\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => {\r\n              setInput(e.target.value)\r\n            }}\r\n            placeholder='Type a message'\r\n            type='text'\r\n          />\r\n          <button onClick={sendMessage} type='submit'>\r\n            Send a message\r\n          </button>\r\n        </form>\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chat\r\n","D:\\Test\\whatsapp-clone\\src\\firebase.js",[],"D:\\Test\\whatsapp-clone\\src\\Components\\Login.js",["54","55"],"import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './Login.css'\r\nimport { auth, provider } from '../firebase'\r\nimport { actionTypes } from './reducer'\r\nimport { useStateValue } from './StateProvider'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateValue()\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) =>\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        })\r\n      )\r\n      .catch((error) => alert(error.message))\r\n  }\r\n  return (\r\n    <div className='login'>\r\n      <div className='login__container'>\r\n        <img\r\n          src='https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg'\r\n          alt=''\r\n        />\r\n\r\n        <div className='login__text'>\r\n          <h1>Sign in to Whatsapp</h1>\r\n        </div>\r\n\r\n        <Button type='submit' onClick={signIn}>\r\n          Sign in with google\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","D:\\Test\\whatsapp-clone\\src\\Components\\reducer.js",[],"D:\\Test\\whatsapp-clone\\src\\Components\\StateProvider.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"64","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"65","line":16,"column":20,"nodeType":"62","messageId":"63","endLine":16,"endColumn":28},{"ruleId":"60","severity":1,"message":"65","line":17,"column":20,"nodeType":"62","messageId":"63","endLine":17,"endColumn":28},{"ruleId":"60","severity":1,"message":"65","line":20,"column":20,"nodeType":"62","messageId":"63","endLine":20,"endColumn":28},{"ruleId":"60","severity":1,"message":"66","line":7,"column":10,"nodeType":"62","messageId":"63","endLine":7,"endColumn":14},{"ruleId":"67","severity":1,"message":"68","line":10,"column":10,"nodeType":"69","messageId":"70","endLine":10,"endColumn":12},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","'Link' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]